{
  "Functional component with interface": {
    "prefix": "func",
    "body": [
      "import React from 'react'",
      "",
      "export interface ${TM_FILENAME_BASE}Props {",
      "  $0",
      "}",
      "",
      "export default function ${TM_FILENAME_BASE}({}: ${TM_FILENAME_BASE}Props) {",
      "  return (",
      "    <div>",
      "      ",
      "    </div>",
      "  )",
      "}",
      ""
    ],
    "description": "Functional component with interface"
  },
  "useEffect": {
    "prefix": "usef",
    "body": ["  useEffect(() => {", "    $2", "  }, [$1]);", ""],
    "description": "useEffect with default cursor in the sources. Use tab to reach the body"
  },
  "Storybook story template": {
    "prefix": "storybook",
    "body": [
      "import React from \"react\";",
      "import ${TM_FILENAME_BASE/(.*)\\..+$/$1/}, {${TM_FILENAME_BASE/(.*)\\..+$/$1/}Props} from \"./${TM_FILENAME_BASE/(.*)\\..+$/$1/}\";",
      "import { Meta, Story } from \"@storybook/react\";",
      "",
      "export default {",
      "  title: \"${TM_FILENAME_BASE/(.*)\\..+$/$1/}\",",
      "} as Meta;",
      "",
      "const Template: Story<${TM_FILENAME_BASE/(.*)\\..+$/$1/}Props> = (args) => {",
      "  return <${TM_FILENAME_BASE/(.*)\\..+$/$1/} {...args} />;",
      "};",
      "",
      "export const Primary = Template.bind({});",
      "Primary.args = {",
      "  $0",
      "};",
      ""
    ],
    "description": "Storybook story template"
  },
  "Blank hook": {
    "prefix": "usehook",
    "body": [
      "",
      "export default function ${TM_FILENAME_BASE/(.*)\\\\..+$/$1/}() {",
      "  const func = async () => {",
      "    $0",
      "  };",
      "  ",
      "  return { func };",
      "}",
      ""
    ],
    "description": "Blank hook"
  },
  "Use state hook": {
    "prefix": "uses",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState(${2})"],
    "description": "Use state hook"
  },
  "Backquote concat": {
    "prefix": "$",
    "body": "\\${$1}",
    "description": "concat variable with backquote sting"
  }
}
